Activated by setting bit 5 in the NGHam header.

An NGHam extension packet consists of one or more packet elements, each preceded with a type byte and a length byte.

Maximum positive value is N/A

Wait one full timeslot period to generate adress book or wait for almanac from base station, then picks random free timeslot.
Use this time slot for 
A timeslot is considered free again if not used for 3 periods.

Binary data (0x00)

Ham source (type 0x01)
Always first in a packet, except when resent by another station.
    uint8_t callsign[6]; // 7 x 6 bit (base64: 0-25=A-Z, 52-61=0-9), empty characters padded with 0, 6 bit SSID
    uint8_t sequence;    // Wraps around from 255 to 0

typedef struct
{
    unsigned int six-char:6;
} bit;

        uint32_t octet_a = i < input_length ? (unsigned char)data[i++] : 0;
        uint32_t octet_b = i < input_length ? (unsigned char)data[i++] : 0;
        uint32_t octet_c = i < input_length ? (unsigned char)data[i++] : 0;

        uint32_t triple = (octet_a << 0x10) + (octet_b << 0x08) + octet_c;

        encoded_data[j++] = encoding_table[(triple >> 3 * 6) & 0x3F];
        encoded_data[j++] = encoding_table[(triple >> 2 * 6) & 0x3F];
        encoded_data[j++] = encoding_table[(triple >> 1 * 6) & 0x3F];
        encoded_data[j++] = encoding_table[(triple >> 0 * 6) & 0x3F];
    }


// unsigned int data : 24;

Position (type 0x02), 16 bytes
    int32_t latitude;          // 
    int32_t longitude;         // 
    int32_t altitude;          // In centimeters
    uint16_t speed;            // In tenth of meters per second
    uint16_t heading;          // In tenth of degrees

Time of week (type 0x03)
Timing reference used for TDMA synchronization.
    uint32_t tow;         // Time stamp of synchronization word start in millisecond time of week
    uint8_t tow_validity; // TOW validity

Timeslot information (0x04)
 * 10b offset (0-599)
 * stretch
 * period

Timeslot almanac (0x05)
 * 75 B bitmap of all 600 time slots

Comment (0x06)
 * n ASCII characters

Icon (0x07)
    uint8_t icon_type;

System info (22 bytes)
	uint16_t hw_ver;			// 10b company, 6b product
	uint16_t serial;			// Serial nr.
	uint16_t sw_ver;			// 4b major, 4b minor, 8b build
    uint32_t uptime;            // Seconds since startup
    uint8_t voltage;			// Input voltage in desivolts (0-25.5)
    int8_t temp;				// System temp in deg. celsius (-128 to 127)
	uint8_t signal;				// Last received signal strength in dBm - 200, -200 to 55
    uint8_t noise;				// Noise floor in dBm - 200, -200 to 55
    uint16_t cntr_rx_ok;		// Packets successfully received
    uint16_t cntr_rx_fix;		// Packets with corrected errors
	uint16_t cntr_rx_err;		// Packets with uncorrectable errors
    uint16_t cntr_tx;			// Packets sent


** Hopping **
 * 1B hopping: 2b reserved, 1b fill_in_hop_finished, 1b fill_in_hop_total, 2b hops_finished, 2b hops_total (not including fill-in)

** Ham destination **
 * 6B dest-call: 7 x 6 bit (base64 chars), 6 bit SSID
 * 1B connected mode information: 0=none, 1=cts, 2=rts, 3=ack, 4=nack

** Voice **
 * 42B voice (7x6B 2400bps Codec2 frames, 140 ms of voice)
Takes less than 140 ms to transmit at 4800 baud. Will fit in 60 B payload size with 1 B to 12 B padding.
