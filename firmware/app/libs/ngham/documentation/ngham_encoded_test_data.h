// The examples given below shows how a given payload will be encoded using the NGHam RF-protocol

/*** Example 1 ***/

// Input data is "TEST", minus the zero termination. The standard output will be 58 bytes long:
// 4 B preamble, 4 B sync word, 3 B size tag, 3 B length and CRC, 4 byte actual data, 24 B padding, 16 B parity data

uint8_t data_in[] = {0x54, 0x45, 0x53, 0x54};

// Output data with normal two-level modulation will be as follows
uint8_t data_out[] = {
0xaa, 0xaa, 0xaa, 0xaa, 0x5d, 0xe6, 0x2a, 0x7e, 
0x3b, 0x49, 0xcd, 0xe7, 0x1c, 0x4b, 0x93, 0xce, 
0x59, 0x68, 0xbc, 0x8e, 0x2c, 0x93, 0xad, 0xa7, 
0xb7, 0x46, 0xce, 0x5a, 0x97, 0x7d, 0xcc, 0x32, 
0xa2, 0xbf, 0x3e, 0x0a, 0x10, 0xf1, 0x88, 0x94, 
0xcd, 0xea, 0xe0, 0xf7, 0xf9, 0x24, 0x26, 0xd1, 
0x58, 0x63, 0x0b, 0x25, 0x68, 0x3c, 0xaf, 0x97, 
0x94, 0xd5};

// Output in the case of four level modulation
uint8_t data_out_4_level[] = {
0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 0xdd, 
0x77, 0xf7, 0xfd, 0x7d, 0x5d, 0xdd, 0x7f, 0xfd,
0x3b, 0x49, 0xcd, 0xe7, 0x1c, 0x4b, 0x93, 0xce,
0x59, 0x68, 0xbc, 0x8e, 0x2c, 0x93, 0xad, 0xa7,
0xb7, 0x46, 0xce, 0x5a, 0x97, 0x7d, 0xcc, 0x32,
0xa2, 0xbf, 0x3e, 0x0a, 0x10, 0xf1, 0x88, 0x94,
0xcd, 0xea, 0xe0, 0xf7, 0xf9, 0x24, 0x26, 0xd1,
0x58, 0x63, 0x0b, 0x25, 0x68, 0x3c, 0xaf, 0x97,
0x94, 0xd5};

/*** Example 2 ***/

// The input this time is 28 bytes, "1234567890123456789012345678", minus zero termination.
// The output will be 58 bytes again, but with no padding. This is a completely filled packet of the smallest out of 7 sizes.

uint8_t data_in[] = {
0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36,
0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34,
0x35, 0x36, 0x37, 0x38};

uint8_t data_out[] = {
0xaa, 0xaa, 0xaa, 0xaa, 0x5d, 0xe6, 0x2a, 0x7e,
0x3b, 0x49, 0xcd, 0xff, 0x79, 0x3c, 0xf3, 0xae,
0x38, 0x46, 0x8b, 0xb6, 0x15, 0xa3, 0x9c, 0x95,
0x84, 0x72, 0xfb, 0x6c, 0xa0, 0x45, 0xf5, 0x02,
0x93, 0x8d, 0x0d, 0x3e, 0x25, 0xc7, 0xbf, 0xac,
0x5e, 0x14, 0x13, 0x35, 0x5c, 0x49, 0x0a, 0x7d,
0x81, 0xb8, 0x04, 0x0d, 0x60, 0xf5, 0xf3, 0xa4,
0x60, 0xc0};

